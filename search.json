[{"path":"https://nbelouard.github.io/Photo2ARW/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Photo2ARW authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nbelouard.github.io/Photo2ARW/articles/intro.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Prepare file for batch import into ARW","text":"First setup librairies. don’t libraries, can install using “install.packages(nameOfTheLibrary)”","code":""},{"path":"https://nbelouard.github.io/Photo2ARW/articles/intro.html","id":"photo-renaming","dir":"Articles","previous_headings":"","what":"Photo renaming","title":"Prepare file for batch import into ARW","text":"Now, let’s rename photos. first step create table keep memory raw photo name new photo name, case ever need go back initial photos. second step actually rename photos based codes defined. security reasons, files copied another folder renamed, original photo still exists.","code":"#1 **INPUT NEEDED**  #set the folder containing the photos to import   pathToPhotos <- file.path(here(\"data\"))  #2 get the list of the photos in this folder. Sends an error if no photos are found. (photoNames <- data.frame(rawPhotoNames = list.files(path = pathToPhotos, full.names = FALSE))) # check that these are the expected photos ##   rawPhotoNames ## 1     test1.jpg ## 2     test2.jpg ## 3     test3.jpg nb_photos <- dim(photoNames)[1] if (nb_photos == 0){ print(\"Error: no photos in this directory.\")}   #3 extract the EXIF data and check that the photos contain the creation date listEXIF <- read_exif(file.path(pathToPhotos, photoNames$rawPhotoNames)) if (!\"CreateDate\" %in% names(listEXIF)) {    print(\"Error: the photos do not have a CreateDate. Rename the photos manually, then use photo2batchimport to create the ARW table\")   } else if (any(is.na(listEXIF$CreateDate))){      print(\"Error: some of the photos do not have a CreateDate. Rename the photos manually, then use photo2batchimport to create the ARW table\")    } else { print(\"Photos are appropriate for automatic renaming based on CreateDate.\")     listEXIF %<>% select(FileName, CreateDate) %>% arrange(CreateDate) # sort the photos by CreateDate (chronological order)       } ## [1] \"Photos are appropriate for automatic renaming based on CreateDate.\" #4 **INPUT NEEDED**  #determine the base code that you want to rename these photos with. The function will then increment a 3-digit number to each photo  Code = \"PVL_M_05_11_2024\"  #5 create a table containing the raw and new photo names. Check that everything is as expected. (listEXIF %<>% mutate(newPhotoName = paste0(Code, \"_\", str_pad(row_number(), pad = 0,width = 3 , \"left\"),\"_ind.jpg\")) %>%    rename(rawPhotoName = FileName)) %>% select(CreateDate, rawPhotoName, newPhotoName) ## # A tibble: 3 × 3 ##   CreateDate          rawPhotoName newPhotoName                 ##   <chr>               <chr>        <chr>                        ## 1 2024:11:05 22:03:53 test1.jpg    PVL_M_05_11_2024_001_ind.jpg ## 2 2024:11:05 22:05:22 test3.jpg    PVL_M_05_11_2024_002_ind.jpg ## 3 2024:11:05 22:07:37 test2.jpg    PVL_M_05_11_2024_003_ind.jpg #6 **INPUT NEEDED** #if everything is okay, store this table in a file write.csv(listEXIF, file.path(here(\"exports\", \"photoNames_PVL_M_05_11_2024.csv\"))) for (i in 1:length(listEXIF$rawPhotoName)){   file.copy(file.path(pathToPhotos, listEXIF$rawPhotoName[i]),              file.path(here(\"dataRenamed\")))   file.rename(from = file.path(here(\"dataRenamed\", listEXIF$rawPhotoName[i])),                to = file.path(here(\"dataRenamed\", listEXIF$newPhotoName[i]))) }"},{"path":"https://nbelouard.github.io/Photo2ARW/articles/intro.html","id":"batch-import-prep","dir":"Articles","previous_headings":"","what":"Batch Import prep","title":"Prepare file for batch import into ARW","text":"Congratulations, set photos ready upload ARW!","code":"#0 set the path to the renamed photos pathToPhotos <- file.path(here(\"dataRenamed\"))  #1 Create a table with the photo names photoNames <- list.files(path = pathToPhotos, full.names = FALSE) BatchImportdf <- data.frame(Encounter.mediaAsset0 = photoNames) print(BatchImportdf) #make sure these are the expected photos ##          Encounter.mediaAsset0 ## 1 PVL_M_05_11_2024_001_ind.jpg ## 2 PVL_M_05_11_2024_002_ind.jpg ## 3 PVL_M_05_11_2024_003_ind.jpg #2 **INPUT NEEDED** # Extract details from the photo name # Change the submitterID to your ARW login # if this is the first time ever that this site is prospected, and you are confident that there are no duplicates in your photos, you can assign individual names without recognition (= each photo is set to a new individual name) by setting MarkedID = T. BatchImportdf_ready <- photo2batchimport(BatchImportdf,                                          submitterID = \"JSmith\",                                          MarkedID = F)  # Take a look at the final table head(BatchImportdf_ready) ##          Encounter.mediaAsset0 Encounter.day Encounter.month Encounter.year ## 1 PVL_M_05_11_2024_001_ind.jpg            05              11           2024 ## 2 PVL_M_05_11_2024_002_ind.jpg            05              11           2024 ## 3 PVL_M_05_11_2024_003_ind.jpg            05              11           2024 ##   Encounter.locationID Encounter.verbatimLocality Encounter.sightingID ## 1            Prevalaye                      PVL_M       PVL_M_05112024 ## 2            Prevalaye                      PVL_M       PVL_M_05112024 ## 3            Prevalaye                      PVL_M       PVL_M_05112024 ##   Encounter.alternateID Encounter.genus Encounter.specificEpithet ## 1        M_05112024_001      Salamandra                salamandra ## 2        M_05112024_002      Salamandra                salamandra ## 3        M_05112024_003      Salamandra                salamandra ##   Encounter.project0.researchProjectName Encounter.submitterID ## 1                        Salamandres BZH                JSmith ## 2                        Salamandres BZH                JSmith ## 3                        Salamandres BZH                JSmith # Save the table for export - Change the file name to your needs write.csv(BatchImportdf_ready, file.path(here(\"exports\", \"PVL_M_05112024.csv\")), row.names = F)"},{"path":"https://nbelouard.github.io/Photo2ARW/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nadège Belouard. Author, maintainer.","code":""},{"path":"https://nbelouard.github.io/Photo2ARW/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Belouard N (2025). Photo2ARW: Prepare photos batch import ARW. R package version 0.0.0.9000, https://github.com/nbelouard/Photo2ARW.","code":"@Manual{,   title = {Photo2ARW: Prepare photos for batch import into ARW},   author = {Nadège Belouard},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/nbelouard/Photo2ARW}, }"},{"path":[]},{"path":"https://nbelouard.github.io/Photo2ARW/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Prepare photos for batch import into ARW","text":"can install development version Photo2ARW GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"nbelouard/Photo2ARW\")"},{"path":"https://nbelouard.github.io/Photo2ARW/reference/photo2batchimport.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the ","title":"Create the ","text":"Create \"batch import\" table Amphibian Reptile Wildbook","code":""},{"path":"https://nbelouard.github.io/Photo2ARW/reference/photo2batchimport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the ","text":"","code":"photo2batchimport(   BatchImportdf = BatchImportdf,   submitterID = \"Votre Nom\",   MarkedID = F )"},{"path":"https://nbelouard.github.io/Photo2ARW/reference/photo2batchimport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the ","text":"BatchImportdf dataset processed submitterID Name person submitting data","code":""},{"path":"https://nbelouard.github.io/Photo2ARW/reference/photo2batchimport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the ","text":"table upload ARW Batch Import","code":""},{"path":"https://nbelouard.github.io/Photo2ARW/reference/photo2batchimport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the ","text":"","code":"if (FALSE) { # \\dontrun{ new_dataset <- photo2batchimport(dataset) } # }"}]
